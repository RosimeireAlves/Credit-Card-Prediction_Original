## Comandos para executar entendimento de erros:
scaler = StandardScaler()

## apresentand dados em escala:
data['NormalizedAmount'] = scaler.fit_transform(data['Amount'].values.reshape(-1, 1))

## realizando Split de dados:

data = data.drop(['Amount', 'Time'], axis = 1)
y = data['Class']
X = data.drop(['Class'], axis = 1)


## entendendo o eixo y: (classe, dtype: int64)

##classe é a colluna que classifica as transações entre reais ou falsas.
y.head()


## Criando um modelo de teste e de treino:

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 0)

# Converter dados

train_identity = X_train.index
test_identity = X_test.index

X_train = np.array(X_train)
X_test = np.array(X_test)
y_train = np.array(y_train)
y_test = np.array(y_test)
